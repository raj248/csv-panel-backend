generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Unified User table for both admin and regular users
model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books     Book[]   // relation to books uploaded by user

  @@index([email]) // optional, email is already unique
}

// Role enum
enum Role {
  ADMIN
  USER
}

// Book table
model Book {
  id        String   @id @default(cuid())
  isbn      String   @unique
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  entries   Entry[]  // relation to all entries for this book
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])      // fast lookup of books by user
  @@index([isbn, userId]) // compound index if you query both
}

// Entry table
model Entry {
  id                  String   @id @default(cuid())
  book                Book     @relation(fields: [bookId], references: [id])
  bookId              String

  openingStock        Int?
  printedCopies       Int?
  soldCopies          Int?
  returnCopies        Int?
  mrp                 Float?
  amount              Float?
  complimentaryDamage Int?
  closingStock        Int?

  fromDate            DateTime
  toDate              DateTime
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([bookId])                 // fast lookup of entries for a book
  @@index([fromDate, toDate])       // fast date range queries
  @@index([bookId, fromDate, toDate]) // compound index for book + date range
}
